# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import train_booking_pb2 as train__booking__pb2

GRPC_GENERATED_VERSION = '1.75.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in train_booking_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class TicketingStub(object):
    """The main service for our ticketing system.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
                '/train_booking.Ticketing/Register',
                request_serializer=train__booking__pb2.RegisterRequest.SerializeToString,
                response_deserializer=train__booking__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.Login = channel.unary_unary(
                '/train_booking.Ticketing/Login',
                request_serializer=train__booking__pb2.LoginRequest.SerializeToString,
                response_deserializer=train__booking__pb2.LoginResponse.FromString,
                _registered_method=True)
        self.Logout = channel.unary_unary(
                '/train_booking.Ticketing/Logout',
                request_serializer=train__booking__pb2.LogoutRequest.SerializeToString,
                response_deserializer=train__booking__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.ListCities = channel.unary_unary(
                '/train_booking.Ticketing/ListCities',
                request_serializer=train__booking__pb2.ListCitiesRequest.SerializeToString,
                response_deserializer=train__booking__pb2.ListCitiesResponse.FromString,
                _registered_method=True)
        self.SearchTrainServices = channel.unary_unary(
                '/train_booking.Ticketing/SearchTrainServices',
                request_serializer=train__booking__pb2.SearchRequest.SerializeToString,
                response_deserializer=train__booking__pb2.SearchResponse.FromString,
                _registered_method=True)
        self.AddTrain = channel.unary_unary(
                '/train_booking.Ticketing/AddTrain',
                request_serializer=train__booking__pb2.AddTrainRequest.SerializeToString,
                response_deserializer=train__booking__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.AddTrainService = channel.unary_unary(
                '/train_booking.Ticketing/AddTrainService',
                request_serializer=train__booking__pb2.AddTrainServiceRequest.SerializeToString,
                response_deserializer=train__booking__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.InitiateBooking = channel.unary_unary(
                '/train_booking.Ticketing/InitiateBooking',
                request_serializer=train__booking__pb2.InitiateBookingRequest.SerializeToString,
                response_deserializer=train__booking__pb2.BookingConfirmation.FromString,
                _registered_method=True)
        self.ProcessPayment = channel.unary_unary(
                '/train_booking.Ticketing/ProcessPayment',
                request_serializer=train__booking__pb2.ProcessPaymentRequest.SerializeToString,
                response_deserializer=train__booking__pb2.StatusResponse.FromString,
                _registered_method=True)
        self.GetMyBookings = channel.unary_unary(
                '/train_booking.Ticketing/GetMyBookings',
                request_serializer=train__booking__pb2.GetMyBookingsRequest.SerializeToString,
                response_deserializer=train__booking__pb2.BookingList.FromString,
                _registered_method=True)


class TicketingServicer(object):
    """The main service for our ticketing system.
    """

    def Register(self, request, context):
        """--- User Management ---
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCities(self, request, context):
        """--- Public Information ---
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchTrainServices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddTrain(self, request, context):
        """--- Admin Functions ---
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddTrainService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitiateBooking(self, request, context):
        """--- Customer Booking Flow ---
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessPayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMyBookings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TicketingServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=train__booking__pb2.RegisterRequest.FromString,
                    response_serializer=train__booking__pb2.StatusResponse.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=train__booking__pb2.LoginRequest.FromString,
                    response_serializer=train__booking__pb2.LoginResponse.SerializeToString,
            ),
            'Logout': grpc.unary_unary_rpc_method_handler(
                    servicer.Logout,
                    request_deserializer=train__booking__pb2.LogoutRequest.FromString,
                    response_serializer=train__booking__pb2.StatusResponse.SerializeToString,
            ),
            'ListCities': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCities,
                    request_deserializer=train__booking__pb2.ListCitiesRequest.FromString,
                    response_serializer=train__booking__pb2.ListCitiesResponse.SerializeToString,
            ),
            'SearchTrainServices': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchTrainServices,
                    request_deserializer=train__booking__pb2.SearchRequest.FromString,
                    response_serializer=train__booking__pb2.SearchResponse.SerializeToString,
            ),
            'AddTrain': grpc.unary_unary_rpc_method_handler(
                    servicer.AddTrain,
                    request_deserializer=train__booking__pb2.AddTrainRequest.FromString,
                    response_serializer=train__booking__pb2.StatusResponse.SerializeToString,
            ),
            'AddTrainService': grpc.unary_unary_rpc_method_handler(
                    servicer.AddTrainService,
                    request_deserializer=train__booking__pb2.AddTrainServiceRequest.FromString,
                    response_serializer=train__booking__pb2.StatusResponse.SerializeToString,
            ),
            'InitiateBooking': grpc.unary_unary_rpc_method_handler(
                    servicer.InitiateBooking,
                    request_deserializer=train__booking__pb2.InitiateBookingRequest.FromString,
                    response_serializer=train__booking__pb2.BookingConfirmation.SerializeToString,
            ),
            'ProcessPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessPayment,
                    request_deserializer=train__booking__pb2.ProcessPaymentRequest.FromString,
                    response_serializer=train__booking__pb2.StatusResponse.SerializeToString,
            ),
            'GetMyBookings': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMyBookings,
                    request_deserializer=train__booking__pb2.GetMyBookingsRequest.FromString,
                    response_serializer=train__booking__pb2.BookingList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'train_booking.Ticketing', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('train_booking.Ticketing', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Ticketing(object):
    """The main service for our ticketing system.
    """

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/train_booking.Ticketing/Register',
            train__booking__pb2.RegisterRequest.SerializeToString,
            train__booking__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/train_booking.Ticketing/Login',
            train__booking__pb2.LoginRequest.SerializeToString,
            train__booking__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/train_booking.Ticketing/Logout',
            train__booking__pb2.LogoutRequest.SerializeToString,
            train__booking__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListCities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/train_booking.Ticketing/ListCities',
            train__booking__pb2.ListCitiesRequest.SerializeToString,
            train__booking__pb2.ListCitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SearchTrainServices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/train_booking.Ticketing/SearchTrainServices',
            train__booking__pb2.SearchRequest.SerializeToString,
            train__booking__pb2.SearchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddTrain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/train_booking.Ticketing/AddTrain',
            train__booking__pb2.AddTrainRequest.SerializeToString,
            train__booking__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddTrainService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/train_booking.Ticketing/AddTrainService',
            train__booking__pb2.AddTrainServiceRequest.SerializeToString,
            train__booking__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InitiateBooking(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/train_booking.Ticketing/InitiateBooking',
            train__booking__pb2.InitiateBookingRequest.SerializeToString,
            train__booking__pb2.BookingConfirmation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProcessPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/train_booking.Ticketing/ProcessPayment',
            train__booking__pb2.ProcessPaymentRequest.SerializeToString,
            train__booking__pb2.StatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMyBookings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/train_booking.Ticketing/GetMyBookings',
            train__booking__pb2.GetMyBookingsRequest.SerializeToString,
            train__booking__pb2.BookingList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
